version: "3.8"

services:
  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./.docker/db/data/:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    # expose:
    #   - 5432
    # network_mode: host

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    



  # redis:
  #   restart: always
  #   image: redis:5-alpine
  #   expose:
  #     - "6379"
  #   ports:
  #     - "6379:6379"

  # flower:
  #   image: mher/flower
  #   environment:
  #     - CELERY_BROKER_URL=redis://redis:6379/
  #     - FLOWER_PORT=8888
  #   ports:
  #     - 8888:8888

  # rabbitmq:
  #   restart: always
  #   image: rabbitmq:3.8.17-management-alpine
  #   container_name: rabbitmq
  #   # command: sh -c "rabbitmq-plugins enable rabbitmq_management"
  #   volumes:
  #     - ./.docker/rabbitmq/etc/:/etc/rabbitmq/
  #     - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
  #     - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/
  #   environment:
  #     RABBITMQ_ERLANG_COOKIE: aqswdefr
  #     RABBITMQ_DEFAULT_USER: guest
  #     RABBITMQ_DEFAULT_PASS: guest
  #   ports:
  #     - 5672:5672
  #     - 15672:15672

  web:
    build: 
      context: .
      dockerfile: Dockerfile
    command: >
      bash -c "python manage.py migrate
      && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db

  # worker:
  #   build: .
  #   depends_on:
  #     - redis
  #   volumes:
  #     - .:/app
  #   command: bash -c "celery -A evaly worker -l info"
