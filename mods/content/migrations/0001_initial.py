# Generated by Django 3.2.7 on 2021-11-04 15:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ContentData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_id', models.CharField(max_length=100, unique=True)),
                ('content_id', models.CharField(max_length=244)),
                ('field_key', models.CharField(max_length=244)),
                ('field_value', models.CharField(max_length=100)),
                ('value_format', models.CharField(choices=[('JSON', 'json'), ('BASE64', 'base64'), ('TEXT', 'text'), ('MARKDOWN', 'markdown')], default='json', max_length=100)),
                ('params', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'converse_content_data',
            },
        ),
        migrations.CreateModel(
            name='ContentMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_type', models.CharField(max_length=100)),
                ('media_ref', models.CharField(max_length=244)),
                ('public_url', models.CharField(max_length=244)),
                ('storage_provider', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=244)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'converse_content_media',
            },
        ),
        migrations.CreateModel(
            name='ConverseContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_ref', models.CharField(max_length=100, unique=True)),
                ('type_name', models.CharField(max_length=244)),
                ('description', models.TextField()),
                ('content_icon', models.CharField(max_length=100)),
                ('config_keys', models.JSONField()),
                ('error_text_ref', models.CharField(max_length=244)),
                ('params', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'converse_content_type',
            },
        ),
        migrations.CreateModel(
            name='ContentText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_ref', models.CharField(max_length=244)),
                ('lang', models.CharField(choices=[('BN', 'bn'), ('EN', 'en')], max_length=244)),
                ('text_body', models.TextField()),
                ('has_vars', models.BooleanField()),
                ('error_text_ref', models.CharField(max_length=244)),
                ('text_group_id', models.CharField(max_length=244)),
                ('text_encoding', models.CharField(max_length=244)),
                ('template_type', models.CharField(max_length=244)),
                ('parent_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='content.contenttext')),
            ],
            options={
                'db_table': 'converse_content_text',
            },
        ),
        migrations.CreateModel(
            name='ContentTaxonomy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taxonomy_type', models.CharField(choices=[('TEXT_GROUP', 'text_group'), ('CATEGORY', 'category'), ('ACTION', 'action')], max_length=100)),
                ('name', models.CharField(max_length=244)),
                ('taxonomy_slug', models.CharField(max_length=244)),
                ('description', models.TextField()),
                ('display_order', models.CharField(max_length=244)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='content.contenttaxonomy')),
            ],
            options={
                'db_table': 'converse_content_taxonomy',
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_ref', models.CharField(max_length=100, unique=True)),
                ('title', models.CharField(max_length=244)),
                ('subtitle', models.CharField(max_length=244)),
                ('description', models.TextField()),
                ('default_action', models.CharField(max_length=100)),
                ('action_items', models.JSONField()),
                ('left_contents', models.JSONField()),
                ('display_order', models.CharField(max_length=100)),
                ('content_body', models.TextField()),
                ('content_format', models.CharField(choices=[('JSON', 'json'), ('BASE64', 'base64'), ('TEXT', 'text'), ('MARKDOWN', 'markdown')], max_length=100)),
                ('template_cache', models.CharField(max_length=100)),
                ('value_cache', models.CharField(max_length=244)),
                ('last_used_at', models.DateTimeField(auto_now=True)),
                ('parent_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='content.content')),
            ],
            options={
                'db_table': 'converse_content',
            },
        ),
    ]
